--%comparator=tech.mlsql.it.IgnoreResultComparator

set jsonStr='''
{"features":[5.1,3.5,1.4,0.2],"label":0.0},
{"features":[5.1,3.5,1.4,0.2],"label":1.0}
{"features":[5.1,3.5,1.4,0.2],"label":0.0}
{"features":[4.4,2.9,1.4,0.2],"label":0.0}
{"features":[5.1,3.5,1.4,0.2],"label":1.0}
{"features":[5.1,3.5,1.4,0.2],"label":0.0}
{"features":[5.1,3.5,1.4,0.2],"label":0.0}
{"features":[4.7,3.2,1.3,0.2],"label":1.0}
{"features":[5.1,3.5,1.4,0.2],"label":0.0}
{"features":[5.1,3.5,1.4,0.2],"label":0.0}
''';
load jsonStr.`jsonStr` as mock_data;


select vec_dense(features) as features, label as label from mock_data as mock_data_1;


train mock_data_1 as RandomForest.`/tmp/model` where
keepVersion="true"
and evaluateTable="mock_data_validate"

and `fitParam.0.labelCol`="label"
and `fitParam.0.featuresCol`="features"
and `fitParam.0.maxDepth`="2"

and `fitParam.1.featuresCol`="features"
and `fitParam.1.labelCol`="label"
and `fitParam.1.maxDepth`="10"
;

load modelExplain.`/tmp/model/_model_0/` where alg="RandomForest" as output_1;

select `name` from output_1 where name="uid" as result;

!assert result ''':name=="uid"'''  "RandomForest modelExplain should be successful";


load modelExplain.`/tmp/model/_model_0/` where alg="RandomForest" and index = "0" as output_2;
select `name` from output_2 where name="uid" as result_2;
!assert result_2 ''':name=="uid"'''  "RandomForest modelExplain should be successful";
